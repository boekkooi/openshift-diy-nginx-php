#!/bin/bash

function install_php() {
    check_libmcrypt
    check_icu
    check_bison
    check_re2c

    local pkg=php-${PHP_VERSION}.tar.gz

    mkdir -p ${BUILD_DIR}
    mkdir -p ${ROOT_DIR}/etc/php/conf.d
    pushd ${BUILD_DIR}

    # Get archive, auto detech closest mirror
    download_and_unpack ${pkg} http://www.php.net/get/${pkg}/from/this/mirror
    pushd php-${PHP_VERSION}

    if [[ ! -f config.log || `tail -n 1 config.log | tr -d '\n'` !=  'configure: exit 0' ]]; then
        echo "Configuring PHP."
        ./configure \
            --with-libdir=lib64 \
            --prefix=${ROOT_DIR}/php \
            --with-config-file-path=${ROOT_DIR}/etc/php/ \
            --with-config-file-scan-dir=${ROOT_DIR}/etc/php/conf.d/ \
            --with-icu-dir=${ROOT_DIR}/libs \
            --with-mcrypt=${ROOT_DIR}/libs \
            --with-layout=PHP \
            --with-curl \
            --with-pear \
            --with-zlib \
            --with-mhash \
            --with-mysql \
            --with-pgsql \
            --with-mysqli \
            --with-pdo-mysql \
            --with-pdo-pgsql \
            --with-openssl \
            --with-xmlrpc \
            --with-xsl \
            --with-bz2 \
            --with-gettext \
            --with-readline \
            --with-fpm-user=www-data \
            --with-fpm-group=www-data \
            --with-kerberos \
            --with-gd \
            --with-jpeg-dir \
            --with-png-dir \
            --with-png-dir \
            --with-xpm-dir \
            --with-freetype-dir \
            --enable-gd-native-ttf \
            --disable-debug \
            --enable-fpm \
            --enable-cli \
            --enable-inline-optimization \
            --enable-exif \
            --enable-wddx \
            --enable-zip \
            --enable-bcmath \
            --enable-calendar \
            --enable-ftp \
            --enable-mbstring \
            --enable-soap \
            --enable-sockets \
            --enable-shmop \
            --enable-dba \
            --enable-sysvsem \
            --enable-sysvshm \
            --enable-sysvmsg \
            --enable-intl \
            --enable-opcache
    fi

    echo "Compiling PHP."
    make install

    # Copy configuration file
    local ini=${TEMPLATE_DIR}/php.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/php.ini
    else
        echo "Copy php.ini from php.ini-production."
        yes | cp php.ini-production ${ROOT_DIR}/etc/php/php.ini
    fi
    local ini=${TEMPLATE_DIR}/php_extra.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/conf.d/php_extra.ini
    fi

    echo "Cleaning build directory."
    popd
    popd
    rm -rf ${BUILD_DIR}
}

function check_php() {
    local php_bin=${ROOT_DIR}/php/bin/php

    if [[ ! -e  ${php_bin} ]]; then
        echo "PHP not installed."
        install_php
    else
        local php_version=`${php_bin} -r "echo phpversion();"`

        if [[ ${PHP_VERSION} != ${php_version} ]]; then
            echo "PHP old, version: ${php_version}."
            install_php
        else
            echo "PHP up to date, version: ${php_version}."
        fi
    fi
}

function install_pecl() {
    if [ -z "${1}" ] || [ -z "${2}" ]; then
        echo "check_pecl: expected two arguments"
        return 1
    fi

    local pkg=${1}-${2}.tgz

    mkdir -p ${BUILD_DIR}
    pushd ${BUILD_DIR}

    # Get archive
    download_and_unpack ${pkg} http://pecl.php.net/get/${pkg}
    pushd ${1}-${2}

    echo "Configuring ${1}."
    ${ROOT_DIR}/php/bin/phpize -clean
    ./configure \
        --with-php-config=${ROOT_DIR}/php/bin/php-config \
        ${3}

    echo "Compiling ${1}."
    make install

    # Copy configuration files
    local ini=${TEMPLATE_DIR}/pecl/${1,,}.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/conf.d/${1,,}.ini
    fi

    echo "Cleaning build directory."
    popd
    popd
    rm -rf ${BUILD_DIR}
}

function check_pecl() {
    if [ -z "${1}" ] || [ -z "${2}" ]; then
        echo "check_pecl: expected two arguments"
        return 1
    fi

    local php_bin=${ROOT_DIR}/php/bin/php
    local pecl_version=`${php_bin} -r "echo phpversion('${1}');"`

    if [[ ${2} != ${pecl_version} ]]; then
        echo "PHP pecl ${1} not installed or old version ${pecl_version}."
        install_pecl ${1} ${2} ${3}
    else
        echo "PHP pecl ${1} up to date, version: ${2}."
    fi
}
